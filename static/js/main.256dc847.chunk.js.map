{"version":3,"sources":["components/Header.js","components/Calculator.js","components/Images.js","components/Hover.js","components/Table.js","components/MovingObj.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Component","Calculator","props","handleChange","e","obj","target","id","value","console","log","setState","state","num1","num2","num3","finalValue","this","parseFloat","onChange","disabled","Images","onRotateHandler","rotateClass","onRotateEverythingHandler","toggle","changeImage","show1","show2","rotating","width","height","src","onClick","Hover","Tooltip","title","rows","Table","trs","i","length","tds","j","push","MovingObj","left","Math","random","top","padding","interval","setInterval","tick","clearInterval","style","position","App","toggleRotateClass","rotateEverything","rotate","path","component","Calcaulator","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.256dc847.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom'\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div className=\"header-text\">\r\n                    Hello World\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/\">Home</Link><span>   </span>\r\n                    <Link to=\"/table\">Table</Link><span>   </span>\r\n                    <Link to=\"/add\">Adding 3 numbers</Link><span>   </span>\r\n                    <Link to=\"/hovor\">Hovor Text</Link><span>   </span>\r\n                    <Link to=\"/rotate\">Rotates</Link><span>   </span>\r\n                    <Link to=\"/moving\">Moving Obj</Link><span>   </span>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Header","import React, { Component } from 'react';\r\n\r\nclass Calculator extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      num1: \"\",\r\n      num2: \"\",\r\n      num3: \"\",\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    let obj = {};\r\n    obj[e.target.id] = e.target.value\r\n    console.log(obj)\r\n    this.setState(obj);\r\n  }\r\n\r\n  render() {\r\n    var finalValue = 0\r\n    var num1 = this.state.num1\r\n    var num2 = this.state.num2\r\n    var num3 = this.state.num3\r\n    finalValue = (num1) ? finalValue + parseFloat(num1) : finalValue\r\n    finalValue = (num2) ? finalValue + parseFloat(num2) : finalValue\r\n    finalValue = (num3) ? finalValue + parseFloat(num3) : finalValue\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"num1\"\r\n          onChange={this.handleChange}\r\n          value={this.state.num1}\r\n        />\r\n        +\r\n        <input\r\n          id=\"num2\"\r\n          onChange={this.handleChange}\r\n          value={this.state.num2}\r\n        />\r\n        +\r\n        <input\r\n          id=\"num3\"\r\n          onChange={this.handleChange}\r\n          value={this.state.num3}\r\n        />\r\n        =\r\n        <input\r\n          value={finalValue}\r\n          disabled\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Calculator;\r\n","import React, { Component } from 'react';\r\nimport './Images.css';\r\n\r\nclass Images extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rotating: null,\r\n      show1:true,\r\n      show2:false\r\n    }\r\n  }\r\n  onRotateHandler = () => {\r\n    if (this.state.rotateClass === null) {\r\n      this.setState({ rotateClass: 'rotate' })\r\n    } else {\r\n      this.setState({ rotateClass: null })\r\n    }\r\n  }\r\n  onRotateEverythingHandler = () => {\r\n    this.props.toggle()\r\n  }\r\n  changeImage = () => {\r\n    if(this.state.show1){\r\n      this.setState({\r\n        show1:false,\r\n        show2:true\r\n      })\r\n    }else{\r\n      this.setState({\r\n        show1:true,\r\n        show2:false\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"images-container\">\r\n        {(this.state.show1) ?\r\n          <img className={this.state.rotateClass} width=\"150\" height=\"150\" src={\"https://via.placeholder.com/150.svg?text=1\"} />\r\n          :\r\n          null\r\n        }\r\n        {(this.state.show2) ?\r\n          <img className={this.state.rotateClass} width=\"150\" height=\"150\" src={\"https://via.placeholder.com/150.svg?text=2\"} />\r\n          :\r\n          null\r\n        }\r\n        <button onClick={this.onRotateHandler}>rotate Image</button>\r\n        <button onClick={this.changeImage}>change Image</button>\r\n        <button onClick={this.onRotateEverythingHandler}>rotate EVERYTHING</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Images;\r\n","import React, { Component } from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Hover extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Tooltip title=\"Delete\">\r\n                    <button onClick={this.onRotateEverythingHandler}>Hover Here</button>\r\n                </Tooltip>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Hover;\r\n","import React, { Component } from 'react';\r\nconst rows = [\r\n    [1,2,3,4,5],\r\n    [6,7,8,9,10],\r\n    [11,12,13,14,15]\r\n    ]\r\nclass Table extends Component {\r\n    render(){\r\n        var trs = []\r\n        for (let i = 0; i < rows.length; i++) {\r\n            var tds = []\r\n            for (let j = 0; j < rows[i].length; j++) {\r\n                tds.push(<td>{rows[i][j]}</td>)\r\n            }\r\n            trs.push(<tr>{tds}</tr>)\r\n        }\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {trs}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass MovingObj extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            left:Math.random()*500,\r\n            top:Math.random()*500,\r\n            padding:Math.random()*50,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.interval = setInterval(() => {\r\n            this.tick()\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n    tick() {\r\n        var obj = {\r\n            left:Math.random()*500,\r\n            top:Math.random()*500,\r\n            padding:Math.random()*50,\r\n        }\r\n        this.setState(obj)\r\n    }\r\n    render() {\r\n        var left = this.state.left + 'px';\r\n        var top =  this.state.top + 'px';\r\n        var padding =  this.state.padding + 'px';\r\n        return (\r\n            <img src=\"http://pngimg.com/uploads/birds/birds_PNG108.png\" style={{ height: \"100px\", padding, left, top, position: 'absolute' }} />\r\n        )\r\n    }\r\n}\r\nexport default MovingObj","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Header'\r\nimport Calcaulator from './Calculator'\r\nimport Images from './Images'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hover from './Hover'\r\nimport Table from './Table'\r\nimport MovingObj from './MovingObj'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rotate: null\r\n    }\r\n  }\r\n  toggleRotateClass = () => {\r\n    if (this.state.rotateEverything === null) {\r\n      this.setState({ rotateEverything: 'rotate' })\r\n    } else {\r\n      this.setState({ rotateEverything: null })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <Router>\r\n        <div className={this.state.rotateEverything}>\r\n          <Header />\r\n          <Switch>\r\n            <div className=\"content test\">\r\n              <Route path=\"/\" />\r\n              <Route path=\"/table\" component={Table} />\r\n              <Route path=\"/moving\" component={MovingObj} />\r\n              <Route path=\"/hovor\" component={Hover} />\r\n              <Route path=\"/add\" component={Calcaulator} />\r\n              <Route path=\"/rotate\">\r\n                <Images toggle={this.toggleRotateClass} />\r\n              </Route>\r\n            </div>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}